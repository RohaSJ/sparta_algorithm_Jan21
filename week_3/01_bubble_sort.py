# 버블 정렬은 첫 번째 자료와 두 번째 자료를,
# 두 번째 자료와 세 번째 자료를, 세 번째와 네 번째를, …
# 이런 식으로 (마지막-1) 번째 자료와 마지막 자료를 비교하여 교환하면서 자료를 정렬하는 방식
# 작은 숫자, 큰 숫자 순서로 있으면 내버려두고
# 큰 숫자,  작은 숫자 순서로 있으면 둘의 위치를 변경
# 한 바퀴를 돌리면 가장 큰 숫자인 9가 맨 뒤로 옴
# 큰 게 나오면 둘의 자리를 변경했으니 가장 맨 뒤로 감
# 즉, 맨 뒷자리를 제외하고 다시 한 번 돌리면 됨

# 반복되는 구조라서 반복문을 써야함
# 1번째 : [4, 6, 2, 9, 1]
#           →  →  →  →  4번 비교! (배열의 길이 -1)
# 2번째 : [4, 2, 6, 1, 9]
#           →  →  →     3번 비교!
# 3번째 : [2, 4, 1, 6, 9]
#           →  →        2번 비교!
# 4번째 : [2, 1, 4, 6, 9]
#           →           1번 비교!
# 즉, 배열의 크기만큼 반복했다가, 1개씩 줄어들면서 반복하게 됨

# 두 변수의 값을 교체하는 건, a, b = b, a 라고 작성하면 됨
# 하나씩 줄어들고 있기 때문에 이중 반복문 사용
# j 는 index 나타내며 (n - i - 1)에서 -1은 마지막 한 번은 비교를 하지 않아도 되기 때문


# Q. 다음과 같이 숫자로 이루어진 배열이 있을 때, 오름차순으로 버블 정렬을 이용해서 정렬하시오.

input = [4, 6, 2, 9, 1]

def bubble_sort(array):
    n = len(array)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if array[j] > array[j + 1]:
                array[j], array[j + 1] = array[j + 1], array[j]
    return


bubble_sort(input)
print(input)  # [1, 2, 4, 6, 9]

# 시간복잡도 : O(N^2)
